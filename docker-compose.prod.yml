version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tryoutgo_app_prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
    env_file:
      - .env.production
    ports:
      - "3000:3000"
    networks:
      - tryoutgo_network
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:15-alpine
    container_name: tryoutgo_postgres_prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: tryoutgo
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - tryoutgo_network

  redis:
    image: redis:7-alpine
    container_name: tryoutgo_redis_prod
    restart: unless-stopped
    volumes:
      - redis_prod_data:/data
    networks:
      - tryoutgo_network
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: tryoutgo_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - tryoutgo_network
    depends_on:
      - app

volumes:
  postgres_prod_data:
  redis_prod_data:

networks:
  tryoutgo_network:
    driver: bridge